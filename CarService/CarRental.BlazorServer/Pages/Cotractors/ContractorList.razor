@page "/contractor"
@inject IContractorService _contractorService
@inject IJSRuntime _js
@inject NavigationManager _navigationManager

<PageTitle>Serwis samochodowy | Klienci</PageTitle>
<h1>Lista klientów</h1>
<br />
<div>
    <div>
        <a href="contractor/add" class="btn bg-primary"><span class="oi oi-plus" aria-hidden="true"></span> Dodaj klienta </a>
    </div>
    <br />
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>Imię</th>
                    <th>Nazwisko</th>
                    <th>Adres</th>
                    <th>Email</th>
                    <th>Numer telefonu</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in _contractorList)
                {
                    <tr>
                        <td>@p.Name</td>
                        <td>@p.LastName</td>
                        <td>@p.Address</td>
                        <td>@p.Email</td>
                        <td>@p.PhoneNumber</td>
                        <td>
                            <button class="btn bg-warning" @onclick="@(()=>UpdateContractor(@p.Id))"><span class="oi oi-pencil" aria-hidden="true"></span>Edytuj</button>
                            <button class="btn bg-danger" @onclick="@(()=>DeleteContractor(@p.Id))"><span class="oi oi-delete" aria-hidden="true"></span>Usuń</button>
                            <button class="btn bg-warning" @onclick="@(()=>GetCar(@p.Id))"><span class="oi oi-pencil" aria-hidden="true"></span>Auta</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>




@code {
    private List<ContractorDto> _contractorList = null;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _contractorList = _contractorService.GetAll();
    }
    protected async Task DeleteContractor(int id)
    {
        var contractor = _contractorList.First(q => q.Id == id);
        var confirm = await _js.InvokeAsync<bool>("confirm", $"Jesteś pewien że chcesz usunąć klienta: {contractor.Name} {contractor.LastName}?");
        if (confirm)
        {
            _contractorService.Delete(id);
            OnInitialized();
        }
    }

    protected async Task UpdateContractor(int id)
    {
        _navigationManager.NavigateTo($"contractor/edit/{id}");
    }

    protected async Task GetCar(int id)
    {
        _navigationManager.NavigateTo($"contractor/car/{id}");

    }
}
